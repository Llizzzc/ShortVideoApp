<template>
  <view class="page">
    <view class="line"></view>
    <view class="waterfall-wrapper" :style="{ height: screenHeight + 'px' }">
      <waterfall
        class="waterfall"
        :style="{ height: screenHeight + 'px' }"
        column-count="2"
        column-width="auto"
        column-gap="2rpx"
        left-gap="6rpx"
        right-gap="4rpx">
        <refresh
          class="refresh"
          v-if="myUserInfo != null"
          @pullingdown="onpullingdown"
          @refresh="onrefresh"
          :display="refreshing ? 'show' : 'hide'">
          <text class="refresh-text">{{ refreshText }}</text>
          <loading-indicator></loading-indicator>
        </refresh>
        <cell v-for="(vlog, index) in waterList" :key="index" class="cell">
          <view class="every-single-video" @appear="appearVlog(index)">
            <image
              :src="vlog.cover"
              mode="aspectFill"
              class="half-cover"
              @click="goToVlog(vlog.vlogId)" />
            <view class="bottom-part">
              <view class="vloger-info-box">
                <image :src="vlog.vlogerFace" class="vloger-face" />
                <view class="vloger-name-box">
                  <text class="vloger-name">
                    {{ vlog.vlogerName }}
                  </text>
                </view>
              </view>
            </view>
          </view>
        </cell>
      </waterfall>
    </view>
  </view>
</template>

<script>
let system = uni.getSystemInfoSync();
let app = getApp();
export default {
  data() {
    return {
      screenHeight: 0,
      statusBarHeight: 0,
      waterList: [],
      page: 0,
      totalPage: 0,
      refreshing: false,
      refreshText: "下拉刷新中...",
      myUserInfo: null,
    };
  },
  onLoad() {
    this.statusBarHeight = system.statusBarHeight;
    let screenHeight = system.safeArea.bottom - 10;
    this.screenHeight = screenHeight;
    this.myUserInfo = app.getUserInfoSession();
  },
  onShow() {
    this.page = 0;
    this.fetchList(0);
  },
  methods: {
    // 下拉刷新的过程中，会触发
    onpullingdown(e) {},
    onrefresh(e) {
      let me = this;
      this.refreshing = true;
      setTimeout(() => {
        this.refreshing = false;
        this.refreshText = "下拉刷新中...";
        uni.stopPullDownRefresh();
      }, 300);

      // 通过list组件的下拉刷新触发当前所在页面的下拉刷新
      this.page = 0;
      this.fetchList(0);
      uni.startPullDownRefresh();
    },

    loadMore() {
      if (this.page >= this.totalPage) {
        return;
      } else {
        this.fetchList(this.page);
      }
    },
    fetchList(page) {
      uni.stopPullDownRefresh();
      let me = this;

      let myUserInfo = app.getUserInfoSession();
      if (myUserInfo == null) {
        me.waterList = [];
        return;
      }

      page = page + 1;

      let userId = getApp().getUserInfoSession().id;
      let serverUrl = app.globalData.serverUrl;
      uni.request({
        method: "GET",
        header: {
          headerUserId: userId,
          headerUserToken: app.getUserSessionToken(),
        },
        url:
          serverUrl +
          "/vlog/friendList?myId=" +
          userId +
          "&page=" +
          page +
          "&pageSize=10",
        success(result) {
          if (result.data.status == 2096) {
            let waterList = result.data.data.rows;
            let totalPage = result.data.data.total;
            if (page == 1) {
              me.waterList = [];
            }
            me.waterList = me.waterList.concat(waterList);
            me.page = page;
            me.totalPage = totalPage;
          }
          uni.stopPullDownRefresh();
        },
      });
    },

    goToVlog(vlogId) {
      uni.navigateTo({
        url: "../vlog/vlog?vlogId=" + vlogId,
      });
    },

    // 每个vlog出现都会触发
    appearVlog(index, e) {
      let me = this;
      // 如果最后一个vlog出现, 则加载更多
      if (index == me.waterList.length - 1) {
        me.loadMore();
      }
    },
  },
};
</script>

<style lang="scss">
.page {
  position: absolute;
  left: 0;
  right: 0;
  top: 0;
  bottom: 0;
  background-color: #181b27;
  .line {
    margin-bottom: 2rpx;
    height: 1rpx;
    background-color: #393a41;
    width: 750rpx;
  }

  .waterfall-wrapper {
    background-color: #181b27;
    .waterfall {
      .refresh {
        .refresh-text {
          color: #ffffff;
          width: 750rpx;
          align-items: center;
          text-align: center;
          height: 80rpx;
        }
      }

      .cell {
        .every-single-video {
          display: flex;
          flex-direction: column;
          margin-top: 5px;
          .half-cover {
            border-top-left-radius: 5px;
            border-top-right-radius: 5px;
            width: 365rpx;
          }
          .bottom-part {
            padding: 5px;
            margin-top: 2px;
            .vloger-info-box {
              margin: 5px 0;
              display: flex;
              flex-direction: row;
              .vloger-face {
                width: 50rpx;
                height: 50rpx;
                border-radius: 10px;
              }
              .vloger-name-box {
                display: flex;
                flex-direction: column;
                justify-content: center;
                .vloger-name {
                  align-self: center;
                  font-size: 12px;
                  color: #ffffff;
                  lines: 2;
                  text-overflow: ellipsis;
                  margin-left: 10px;
                }
              }
            }
          }
        }
      }
    }
  }
}
</style>
